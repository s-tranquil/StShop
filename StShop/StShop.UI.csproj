<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <UserSecretsId>76c36da1-c0fe-49f7-8035-cc480fd7f1a9</UserSecretsId>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.2" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="3.1.2" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="3.1.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.TypeScript.MSBuild" Version="3.8.3">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.9.10" />
    <PackageReference Include="MTT" Version="0.6.5" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>
   <ItemGroup>
	  <Content Include="ClientApp\build\**"> 
		<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory> 
	  </Content> 
   </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\App.test.tsx" />
    <None Remove="ClientApp\src\App.tsx" />
    <None Remove="ClientApp\src\components\Counter.tsx" />
    <None Remove="ClientApp\src\components\FetchData.tsx" />
    <None Remove="ClientApp\src\components\Home.tsx" />
    <None Remove="ClientApp\src\components\Layout.tsx" />
    <None Remove="ClientApp\src\components\NavMenu.tsx" />
    <None Remove="ClientApp\src\constants\email-regexp.ts" />
    <None Remove="ClientApp\src\constants\index.ts" />
    <None Remove="ClientApp\src\index.tsx" />
    <None Remove="ClientApp\src\models\index.ts" />
    <None Remove="ClientApp\src\RegisterPage.tsx" />
    <None Remove="ClientApp\src\tsd.d.ts" />
    <None Remove="ClientApp\src\UserContext.tsx" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Remove="ClientApp\src\AuthorizedRoute.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\LoginPage.tsx" />
    <TypeScriptCompile Remove="ClientApp\src\UnauthorizedLayout.tsx" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\StShop.DAL\StShop.DAL.csproj" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\App.tsx" />
  </ItemGroup>
  
  <Target Name="Convert" BeforeTargets="PrepareForBuild">
	<ConvertMain WorkingDirectory="ViewModels/" ConvertDirectory="ClientApp/src/models/" PathStyle="Kebab" />
  </Target>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>



</Project>
